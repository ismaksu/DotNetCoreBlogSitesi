@model EntityLayer.Concrete.Blog
@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/_AuthorLayout.cshtml";
}

<h3>Yeni Blog Girişi</h3>

@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
{
    <div class="card">
        <div class="card-body">
            @Html.Label("Blog Başlığı")
            @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control", @placeholder = "Blog Başlığını Giriniz..", @autocomplete = "off" })
            @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @style = "color: red; margin-bottom: 15px;" })
            <br />
            <br />
            @Html.Label("Blog Görseli")
            @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control", @placeholder = "Görsel URL'si..", @autocomplete = "off" })
            @Html.ValidationMessageFor(x => x.BlogImage, "", new { @style = "color: red;" })
            <br />
            <br />
            @Html.Label("Blog Küçük Görseli")
            @Html.TextBoxFor(x => x.BlogThumbnail, new { @class = "form-control", @placeholder = "Küçük Görsel URL'si..", @autocomplete = "off" })
            <br />
            <br />
            @Html.Label("Blog Kategorisi")
            @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.categoryValues, new { @class = "form-control" })
            <br />
            <br />
            @Html.Label("Blog Yazısı")
            @Html.TextAreaFor(x => x.BlogContent, 15, 3, new { @class = "form-control", @placeholder = "Bir Blog Yazısı Oluşturun!", @autocomplete = "off" })
            @Html.ValidationMessageFor(x => x.BlogContent, "", new { @style = "color: red; margin-bottom: 15px;" })
            <br />
            <br />
            <button class="btn btn-gradient-success">Blog Yazısını Kaydet!</button>
        </div>
    </div>
}

